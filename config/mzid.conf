# Properties mit vielen Feldern, Klartextversion 

# Testproperties
# Tue May 15 17:35:12 CEST 2012
# Format: Key-value pairs, separated by spaces, tabs, "=", ":".
# Lines starting with "#" are comments. Comments appended to a line are not possible!
# See Javadoc for Properties.load for details.

# debug mode: If set to true, token handling is disabled (i.e. no tokens are necessary).
debug = true

# Name of this mzid distribution instance.
dist = ILFTEST

# Database setup
db.driver = com.mysql.jdbc.Driver
db.url = jdbc:mysql://localhost:3306/mzid
db.username = mzid
db.password = mzid

# Field definitions
#
# Every input field must be defined here with field.{fieldname}.type = {fieldtype},
# where fieldname is a unique identifier and fieldtype the name of a subclass of Field.
# Input data from the field will be stored in objects of that class.
#
# The name of a field must be equal to the "name"-tag of the corresponding input element
# in the HTML form (WEB-INF/jsp/patientFormElements.jsp).
#
# In order to deactivate fields temporarily, it is sufficient to comment out the field definition.

field.vorname.type = PlainTextField
field.nachname.type = PlainTextField
field.geburtsname.type = PlainTextField
field.geburtstag.type = IntegerField 
field.geburtsmonat.type = IntegerField
field.geburtsjahr.type = IntegerField
field.plz.type = PlainTextField
field.ort.type = PlainTextField
#field.sex.type = PlainTextField

# Exchange groups
#
# An exchange group denotes a set of fields whose values are considered interchangeable.
# The matcher (currently only EpilinkMatcher) compares the fields in each exchange group to
# all of its permutations and uses the best matching combination for final decision.
#
# An exchange group is defined by exchangeGroup.{id} = {fieldlist}, where id is a sequential number
# and fieldlist a comma-separated list of field names
exchangeGroup.0 = vorname, nachname, geburtsname

# Field transformations
#
# Transformations for a field {fieldname} are defined by
# field.{fieldname}.transformers = {transformerlist}, where
# transformerlist is a comma-separated list of names of subclasses of FieldTransformer.
# 
# The first transformer in the list is applied to the input field as defined in the field definition;
# i.e. the type parameter IN of the first transformer must match the class of the field.
# Every subsequent transformer is applied to the output of its predecessor; i.e. its type parameter IN
# must match type parameter OUT of the preceding transformer.

field.vorname.transformers = StringNormalizer, FirstNameDecomposer
field.nachname.transformers = StringNormalizer, GermanLastNameDecomposer
field.geburtsname.transformers = StringNormalizer, GermanLastNameDecomposer

# field comparators
field.vorname.comparator = NGramComparator
field.nachname.comparator = NGramComparator
field.geburtsname.comparator = NGramComparator

field.geburtstag.comparator = BinaryFieldComparator
field.geburtsmonat.comparator = BinaryFieldComparator
field.geburtsjahr.comparator = BinaryFieldComparator

field.plz.comparator = BinaryFieldComparator
field.ort.comparator = NGramComparator


# Matcher definition
# Property matcher defines the class name of the matcher to use, which must be a subclass
# of Matcher. Currently only EpilinkMatcher is supported.
matcher = EpilinkMatcher

# Config for Epilink Matcher
# 
# matcher.epilink.{fieldname}.frequency: Defines the assumed mean frequency of values
# for field {fieldname}. This corresponds to the u-probability in the Fellegi-Sunter-Model
# and can be estimated by the reciprocal of the number of distinct values (i.e. the
# frequency of "month" is 1 / 12).
matcher.epilink.vorname.frequency = 0.000235
matcher.epilink.nachname.frequency = 0.0000271
matcher.epilink.geburtsname.frequency = 0.0000271

# 1 / 30 (durchschnittliche Tage im Monat)
matcher.epilink.geburtstag.frequency = 0.0333 
# 1 / 12
matcher.epilink.geburtsmonat.frequency = 0.833  
# angenommen: Altersspanne 35 Jahre (Alter 40 - 75).
matcher.epilink.geburtsjahr.frequency = 0.0286

# Kehrwert der Anzahl von Postleitzahlen (außer Postfächern und Großempfänger): 8259 (Stand 6/2003)
# (http://de.wikipedia.org/wiki/Postleitzahl_%28Deutschland%29#Postleitzahlenarten)
matcher.epilink.plz.frequency = 0.000121
# Zu Testdaten: 1 / Anzahl Gemeinden in RLP
#matcher.epilink.ort.frequency = 0.000434
# 1 / Anzahl Gemeinden in Deutschland
matcher.epilink.ort.frequency = 0.0000889

# matcher.epilink.{fieldname}.error_rate defines the assumed error_rate for
# field {fieldname} (1 - m-probability)
# 
# (Bemerkung: Werte aus der Evaluation des KR NRW: Anteil an Matchen, bei denen
# das jeweilige Attribut nicht übereinstimmt)
matcher.epilink.vorname.errorRate = 0.01
matcher.epilink.nachname.errorRate = 0.008
# Keine Daten zum Geburtsnamen -> Nehme gleichen Wert wie für Nachnamen
matcher.epilink.geburtsname.errorRate = 0.008
matcher.epilink.geburtstag.errorRate = 0.005
matcher.epilink.geburtsmonat.errorRate = 0.002
matcher.epilink.geburtsjahr.errorRate = 0.004
matcher.epilink.plz.errorRate = 0.04
# Keine Daten für Ort, benutze gleichen Wert wie für PLZ
matcher.epilink.ort.errorRate = 0.04

 

# matcher.epilink.threshold.match: Defines the minimum weight (in the interval [0,1])
# for which a pair of records is considered a definite match.
#
# matcher.epilink.threshold_non_match: Defines the weight (in the interval [0,1])
# below which a pair of records is considered a definite non-match. Must be less than or equal
# to matcher.epilink.threshold_match.
#
# Record pairs with a weight w with threshold_non_match <= w < threshold_match are
# considered possible matches and lead to a tentative PID. 
matcher.epilink.threshold_match = 0.8
matcher.epilink.threshold_non_match = 0.1


# ID-Generators
# 
# idgenerators: A comma-seperated list of identifiers of ID-Generators, corresponding to ID types.
# 	(not yet implemented)
# for every generator (currently only "pid"):
# idgenerator.{identifier}: Class which implements the ID generator.
#
# Additional params for PIDGenerator (k1, k2, k3, rndwidth) are defined here.
idgenerators = pid
idgenerator.pid = PIDGenerator
idgenerator.pid.k1 = 1
idgenerator.pid.k2 = 2
idgenerator.pid.k3 = 3
idgenerator.pid.rndwidth = 0


# xDAT servers
servers.0.apiKey = mdat1234
servers.0.permissions = addNewPatient;showSessionIds;createSession
servers.0.allowedRemoteAdresses = 127.0.0.1;0:0:0:0:0:0:0:1


# Allowed Format of callback
callback.allowedFormat = https://.* 